<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="windowFinderControl.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAN0SURBVFhHxZZLSFVRFIa3NJCGRQ6CIggaBEGjBg2K
        CkdBhVRgpEkEPeRqVjoIe1AIPUB7QUUFZUhFZBH0NqJxDXIg2TzIRoIEBRn8re/ovm333aerk+vg133W
        +v9/rbP3OudcJ2lWkQzm4tlDaf92actqabGFQhAjByelzUEyOAUjX6VTh6RVi0qL5gEuGrQpzwDJYBHc
        zUwKx0BbZkeSwQxsZ8qQO/OmPs6aWN5O4RV6B0gGS4pjerPHUhHP5+M43LiRnCZKAiXFub660enTI6fh
        Vyt1YV2dHuwf1LElg2q0PGBNjBwcuGhSXlG9KRfZNsaC+wecrm1y+tC3U0+O/lD7vN8qWK7V0DwJ1sTI
        wYGLBm3cRDQTxUU2seG2Ifw25PTAKtzY2qCuFX90xOKt1VL32m+6Vf9YO+0asCZGDg5cNGjxCJugRvB0
        ZH8yMEAhaWzE6fuwNVDYoc6F0kGLn1j6SXca2w1Ven3Wqd5igDUxcnDgokGLB17hzVGrpIGQwBD9GqvW
        yOddOrNyXIerZOf7URfWz9ftBqfLtU4nlzm1uBcZWBMjBwcuGrR44IWn96fWlAbCs/fJoefL1d8xrg6L
        nV4+qL7dNWbs1LfHqTDH2bk7O/+BDKyJkcs4xkWDFg+84pucnAVbWSI8I789b87VqWPBT7XN/a2XXQUN
        nHe6t8/mYZsvDhZNYiJGDg5cNGjxwAvP8JipWWwgfLf7Kb2/94ttr3SpdlTvLjpd2uB0yPgtWeE0yMGB
        m2lMiwdeeIY7Tc1iAz4IuAbH7dnm8ept6tf1zU6HJ4tMB3DRoMUDL+8b1SoNevCCscdYTQYmvdmGbQIT
        W54GuQkeGrR44JWqUbYBXi77bHC22/+ZNoAGLR4zaoBrwLa12fJllx1BnVO7cf8NXz7gwEWDFo+yR5A3
        hHTfvXZUb7ttws3wuBEYslRhQA4OXDRo8Sg7hOUewxenC3p/xelpp33p/vMYkoMDF820H8Ows7wXUW9T
        jXrWON39z4uIHBy4M3oRxcmKv4pBuD0QKv4xmvXPMQhnwTdRsR8kHrGA64r9JPOIhWwbQxTzfD6Oww2P
        EySKg5JAEXETAFMGyG+jj7MmRi4uDHKKg2SwCExThtMF2ujMYySDU8DE5t1ZHvxOBdOeh2QwF9wN2xl+
        OzyIkStzxzGSwcpB7i/uWAkJ6KSBJAAAAABJRU5ErkJggg==
</value>
  </data>
</root>